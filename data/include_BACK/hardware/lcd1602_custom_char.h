/***************************************************************  
    openELECTRO
    Home appliance control, based on arduino and other MPU

    https://github.com/carlymx/openELECTRO
    jordi@surfzone.org, carlymx@gmail.com
    2022
***************************************************************/

//=============================//
//     CUSTOM CHARACTERS:      //
//=============================//
// https://maxpromer.github.io/LCD-Character-Creator/

// 2X2 - RESISTANCES: (7x4 = 28 CHARACTES)
// UP -- --
byte resis_up_a[8] = {0x1F,0x18,0x10,0x00,0x00,0x00,0x00,0x00};
byte resis_up_b[8] = {0x1F,0x03,0x01,0x00,0x00,0x00,0x00,0x00};
byte resis_up_c[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
byte resis_up_d[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
// -- DO --
byte resis_do_a[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
byte resis_do_b[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
byte resis_do_c[8] = {0x00,0x00,0x00,0x00,0x00,0x10,0x1C,0x1F};
byte resis_do_d[8] = {0x00,0x00,0x00,0x00,0x00,0x01,0x07,0x1F};
// -- -- RE
byte resis_re_a[8] = {0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x1C};
byte resis_re_b[8] = {0x00,0x00,0x00,0x00,0x00,0x10,0x08,0x07};
byte resis_re_c[8] = {0x1C,0x02,0x01,0x00,0x00,0x00,0x00,0x00};
byte resis_re_d[8] = {0x07,0x08,0x10,0x00,0x00,0x00,0x00,0x00};
// UP DO --
byte resis_updo_a[8] = {0x1F,0x18,0x10,0x00,0x00,0x00,0x00,0x00};
byte resis_updo_b[8] = {0x1F,0x03,0x01,0x00,0x00,0x00,0x00,0x00};
byte resis_updo_c[8] = {0x00,0x00,0x00,0x00,0x00,0x10,0x1C,0x1F};
byte resis_updo_d[8] = {0x00,0x00,0x00,0x00,0x00,0x01,0x07,0x1F};
// UP -- RE
byte resis_upre_a[8] = {0x1F,0x18,0x10,0x00,0x00,0x01,0x02,0x1C};
byte resis_upre_b[8] = {0x1F,0x03,0x01,0x00,0x00,0x10,0x08,0x07};
byte resis_upre_c[8] = {0x1C,0x02,0x01,0x00,0x00,0x00,0x00,0x00};
byte resis_upre_d[8] = {0x07,0x08,0x10,0x00,0x00,0x00,0x00,0x00};
// -- DO RE
byte resis_dore_a[8] = {0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x1C};
byte resis_dore_b[8] = {0x00,0x00,0x00,0x00,0x00,0x10,0x08,0x07};
byte resis_dore_c[8] = {0x1C,0x02,0x01,0x00,0x00,0x10,0x1C,0x1F};
byte resis_dore_d[8] = {0x07,0x08,0x10,0x00,0x00,0x01,0x07,0x1F};
// UP DO RE
byte resis_updore_a[8] = {0x1F,0x18,0x10,0x00,0x00,0x01,0x02,0x1C};
byte resis_updore_b[8] = {0x1F,0x03,0x01,0x00,0x00,0x10,0x08,0x07};
byte resis_updore_c[8] = {0x1C,0x02,0x01,0x00,0x00,0x10,0x1C,0x1F};
byte resis_updore_d[8] = {0x07,0x08,0x10,0x00,0x00,0x01,0x07,0x1F};

byte* resis_char[28] = {
    resis_up_a, resis_up_b, resis_up_c, resis_up_d, 
    resis_do_a, resis_do_b, resis_do_c, resis_do_d, 
    resis_updo_a, resis_updo_b, resis_updo_c, resis_updo_d, 
    resis_re_a, resis_re_b, resis_re_c, resis_re_d, 
    resis_upre_a, resis_upre_b, resis_upre_c, resis_upre_d, 
    resis_dore_a, resis_dore_b, resis_dore_c, resis_dore_d, 
    resis_updore_a, resis_updore_b, resis_updore_c, resis_updore_d
};

//1X1 - MISC:
byte bell[8]  = {0x4,0xe,0xe,0xe,0x1f,0x0,0x4};
