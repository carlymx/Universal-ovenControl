/***************************************************************  
    openELECTRO
    Home appliance control, based on arduino and other MPU

    https://github.com/carlymx/openELECTRO
    jordi@surfzone.org, carlymx@gmail.com
    2022
***************************************************************/

//ToDo: CREAR ESTRUCTURAS DE DATOS PARA MOSTRAR EN PANTALLA

//      0 1 3 4 5 6 7 8 9 A B C D E F G
//    ===================================
// 0: | [ ] * * 1 8 0 / 2 0 0 * * * * * |
// 1: | [ ] * C A L E N T A N D O * * * |
//    ===================================

//=============================//
//    POSITION CHARACTERS:     //
//=============================//

// LCD 1602 (COLUM, FILE) [ lcd.setCursor(0,0) ]
byte position_resis_a[2] = {0,0};
byte position_resis_b[2] = {1,0};
byte position_resis_c[2] = {0,1};
byte position_resis_d[2] = {1,1};

byte position_current_temp[2]   = {5,0};
byte position_slash[2]          = {8,0};
byte position_prog_temp[2]      = {9,0};
byte position_text[2]           = {4,1};

byte* position_data[8] = {
    position_resis_a, position_resis_b, position_resis_c, position_resis_d,
    position_current_temp, position_slash, position_prog_temp,
    position_text };


//=============================//
//     CUSTOM CHARACTERS:      //
//=============================//
// https://maxpromer.github.io/LCD-Character-Creator/

#define RES_UL

//1X1 - MISC:
uint8_t bell[8]  = {0x4,0xe,0xe,0xe,0x1f,0x0,0x4};

//1X1 - RESISTANCES: 
uint8_t resistance_up[8] = {0x1F,0x11,0x00,0x00,0x00,0x00,0x00,0x00};
uint8_t resistance_down[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x0A,0x1F};
uint8_t resistance_rear[8] = {0x00,0x00,0x0E,0x1B,0x0E,0x00,0x00,0x00};
uint8_t resistance_up_down[8] = {0x1F,0x11,0x00,0x00,0x00,0x00,0x0A,0x1F};
uint8_t resistance_up_rear[8] = {0x1F,0x11,0x0E,0x1B,0x0E,0x00,0x00,0x00};
uint8_t resistance_down_rear[8] = {0x00,0x00,0x0E,0x1B,0x0E,0x00,0x0A,0x1F};
uint8_t resistance_up_down_rear[8] = {0x1F,0x11,0x0E,0x1B,0x0E,0x00,0x0A,0x1F};

//2X2 - RESISTANCES: 
byte resis_up_a[8] = {0x1F,0x19,0x10,0x00,0x00,0x00,0x00,0x00};
byte resis_up_b[8] = {0x1F,0x13,0x01,0x00,0x00,0x00,0x00,0x00};
byte resis_up_c[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
byte resis_up_d[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};

byte resis_do_a[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
byte resis_do_b[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
byte resis_do_c[8] = {0x00,0x00,0x00,0x00,0x00,0x10,0x1C,0xF1};
byte resis_do_d[8] = {0x00,0x00,0x00,0x00,0x00,0x01,0x07,0xF1};

byte resis_re_a[8] = {0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x1C};
byte resis_re_b[8] = {0x00,0x00,0x00,0x00,0x10,0x10,0x08,0x07};
byte resis_re_c[8] = {0x1C,0x02,0x01,0x01,0x00,0x00,0x00,0x00};
byte resis_re_d[8] = {0x07,0x08,0x10,0x10,0x00,0x00,0x00,0x00};

byte resis_updo_a[8] = {0x1F,0x19,0x10,0x00,0x00,0x00,0x00,0x00};
byte resis_updo_b[8] = {0x1F,0x13,0x01,0x00,0x00,0x00,0x00,0x00};
byte resis_updo_c[8] = {0x00,0x00,0x00,0x00,0x00,0x10,0x1C,0xF1};
byte resis_updo_d[8] = {0x00,0x00,0x00,0x00,0x00,0x01,0x07,0xF1};

byte resis_upre_a[8] = {0x1F,0x19,0x10,0x00,0x01,0x01,0x02,0x1C};
byte resis_upre_b[8] = {0x1F,0x13,0x01,0x00,0x10,0x10,0x08,0x07};
byte resis_upre_c[8] = {0x1C,0x02,0x01,0x01,0x00,0x00,0x00,0x00};
byte resis_upre_d[8] = {0x07,0x08,0x10,0x10,0x00,0x00,0x00,0x00};

byte resis_dore_a[8] = {0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x1C};
byte resis_dore_b[8] = {0x00,0x00,0x00,0x00,0x10,0x10,0x08,0x07};
byte resis_dore_c[8] = {0x1C,0x02,0x01,0x01,0x00,0x10,0x1C,0xF1};
byte resis_dore_d[8] = {0x07,0x08,0x10,0x10,0x00,0x01,0x07,0xF1};

byte resis_updore_a[8] = {0x1F,0x19,0x10,0x00,0x01,0x01,0x02,0x1C};
byte resis_updore_b[8] = {0x1F,0x13,0x01,0x00,0x10,0x10,0x08,0x07};
byte resis_updore_c[8] = {0x1C,0x02,0x01,0x01,0x00,0x10,0x1C,0xF1};
byte resis_updore_d[8] = {0x07,0x08,0x10,0x10,0x00,0x01,0x07,0xF1};



struct data_for_lcd_1602{

};
